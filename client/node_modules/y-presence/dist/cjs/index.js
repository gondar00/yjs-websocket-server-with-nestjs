var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  PresenceContext: () => PresenceContext,
  PresenceProvider: () => PresenceProvider,
  useOthers: () => useOthers,
  usePresence: () => usePresence,
  useSelf: () => useSelf
});

// src/hooks/useOthers.ts
var import_react = __toESM(require("react"));
function useOthers() {
  const presence = usePresence();
  const [users, setUsers] = import_react.default.useState([]);
  import_react.default.useEffect(() => {
    function handleChange() {
      setUsers(Array.from(presence.getStates().values()).filter((user) => user && user.id !== presence.clientID));
    }
    handleChange();
    presence.on("change", handleChange);
    return () => {
      presence.off("change", handleChange);
    };
  }, [presence]);
  return users;
}

// src/hooks/usePresence.ts
var import_react3 = __toESM(require("react"));

// src/PresenceProvider.tsx
var import_react2 = __toESM(require("react"));
var PresenceContext = import_react2.default.createContext(null);
function PresenceProvider({
  awareness,
  children
}) {
  import_react2.default.useEffect(() => {
    const currUser = awareness.getLocalState();
    if (!currUser || Object.keys(currUser).length === 0) {
      const user = { id: awareness.clientID };
      awareness.setLocalState(user);
    }
  }, [awareness]);
  import_react2.default.useEffect(() => {
    function handleUnload() {
      awareness.setLocalState(null);
    }
    window.addEventListener("unload", handleUnload);
    return () => {
      window.removeEventListener("unload", handleUnload);
    };
  });
  return /* @__PURE__ */ import_react2.default.createElement(PresenceContext.Provider, {
    value: awareness
  }, children);
}

// src/hooks/usePresence.ts
function usePresence() {
  const presence = import_react3.default.useContext(PresenceContext);
  if (presence == null) {
    throw new Error("Couldn't find PresenceProvider in the React tree");
  }
  return presence;
}

// src/hooks/useSelf.ts
var import_react4 = __toESM(require("react"));
function useSelf(initialPresence) {
  const presence = usePresence();
  const [self, setSelf] = import_react4.default.useState({
    id: presence.clientID,
    presence: initialPresence
  });
  import_react4.default.useEffect(() => {
    presence.setLocalState(self);
  }, [presence, self]);
  const updatePresence = import_react4.default.useCallback((overrides) => {
    const updatedPresence = __spreadValues(__spreadValues({}, self.presence), overrides);
    presence.setLocalState({
      id: presence.clientID,
      presence: updatedPresence
    });
    setSelf(presence.getLocalState());
  }, [presence, self]);
  return {
    self,
    updatePresence
  };
}
module.exports = __toCommonJS(src_exports);
